{{
  import { md } from '../utils/md.ts';
  import abellLogo from '../assets/abell.ico?url';
  import npmLogo from '../assets/npm.svg?url';
}}

{{
  // declarations
  const editorBuilder = {
    files: {
      'index.abell': `
        {{
          // declarations
          const a = 9;
          const b = 2;
        }}

        <body>{{ a + b }}</body>
        `,
      'package.json': `
        {
          "scripts": {
            "dev": "abell dev",
            "generate": "abell generate",
          },
          "devDependencies": {
            "abell": "^1.0.0"
          }
        }
        `
    },
    output: {
      screen: '11'
    }
  }

  const explorerFiles = Object.keys(editorBuilder.files);
}}

<div class="editor">
  <div class="file-explorer">
    <ul>
      {{
        explorerFiles.map((filename) => {
          let logo = { src: abellLogo, space: '&nbsp;', width: 20 };
          if (filename === 'package.json') {
            logo = { src: npmLogo, space: '&nbsp;&nbsp;', width: 15 };
          }

          return /* html */`
          <li class="flex row">
            <button class="flex row active" data-filename="${ filename.replace(/\./g, '-') }"><img width="${logo.width}" src="${ logo.src }" />${ logo.space }${ filename }</button>
          </li>
          `)
        });
      }}
    </ul>
  </div>
  <div class="code-display">
    {{
      () => {
        let htmlCode = '';
        for (const [filename, filecode] of Object.entries(editorBuilder.files)) {
          const language = filename.slice(filename.indexOf('.'));
          htmlCode += /* html */ `
          <div class="file-${filename.replace(/\./g, '-')} ${filename === 'index.abell' ? 'show' : ''}">
            ${
              md([`
              ~~~${language}
              ${filecode}
              ~~~
              `])
            }
          </div>
          `
        }

        return htmlCode;
      }
    }}
  </div>
  <div class="code-preview">
    {{ editorBuilder.output.screen }}
  </div>
</div>

<style>
.flex {
  display: flex;
  align-items: center;
  align-self: center;
}
.flex.row {
  flex-direction: row;
}

section {
  padding: 20px 120px;
}

.editor {
  background-color: #f7f7f7;
  display: flex;
  color: var(--blue-1);
  font-size: 1rem;
  box-shadow: 0 1px 2px rgba(0,0,0,0.07), 
              0 2px 4px rgba(0,0,0,0.07), 
              0 4px 8px rgba(0,0,0,0.07), 
              0 8px 16px rgba(0,0,0,0.07),
              0 16px 32px rgba(0,0,0,0.07), 
              0 32px 64px rgba(0,0,0,0.07);
  min-height: 300px;
}

button {
  background-color: transparent;
  color: inherit;
  border: none;
  font-size: 1rem;
  padding: 8px 12px;
  cursor: pointer;
  display: block;
  width: 100%;
  opacity: 0.5;
}

button.active {
  background-color: #fff;
  border-left: 2px solid var(--blue-4);
  opacity: 1;
}

.file-explorer {
  width: 200px;
  padding: 12px 0px;
}
.code-display {
  background-color: #fff;
  flex: 1;
  padding: 0px 24px;
}
.code-display > div {
  display: none;
}
.code-display > div.show {
  display: block;
}

.code-preview {
  width: 200px;
  padding: 12px 24px;
  background-color: #fff;
  color: #111;
  border-left: 3px solid #f7f7f7;
  font-size: 1rem;
}

ul {
  list-style: none;
  padding: 0px;
}
</style>