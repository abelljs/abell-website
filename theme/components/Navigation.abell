<AbellComponent>
{{ 
  const DarkModeToggle = require('./DarkModeToggle.abell');
  const { $root, $path, contentArray, navMenuOrder, version } = props;

  const isSublink = (meta) =>  {
    return meta.sublinks && $path !== '' && $path.includes(meta.$path);
  }

  const section = (() => {
    if ($path === '') return 'home'
    if ($path.includes('blog')) return 'blog'
    return 'docs';
  })();
          
  const renderSubMenu = (meta) => /* html */ `
    <ul class="submenu">
      ${
        meta.sublinks
          .map(sublink => /* html */ `
            <li>
              <a 
                class="${$path.includes(meta.$path + '/' + sublink.path) ? 'active': ''}" 
                href="${$root}/${meta.$path}/${sublink.path}"
              >
                ${sublink.title}
              </a>
            </li>
            ${isSublink(sublink) ? renderSubMenu(sublink) : ''}
          `)
          .join('')
      }
    </ul>
    `
}}
<template>
  <header>
    <nav class="top-nav shadow-clean">
      <a class="brand nav-item" style="font-size: 15pt;font-weight: bold; color: var(--font-color); padding: 17.5px 20px;" href="{{$root}}/">
        <img style="filter: brightness(1.2);position: relative; top: 3px" alt="Abell logo" src="{{$root}}/favicon.ico" width="31" />
        <span style="position: relative; top: -5px;left: 3px;">Abell <small style="opacity: .7;">v{{ version }}</small></span>
      </a>
      <div style="display: inline-block; float: right;">
        <a class="nav-item hide-mobile {{section === 'home' ? 'active' : ''}}" href="{{$root}}/" replace>Home</a>
        <a class="nav-item hide-mobile {{section === 'docs' ? 'active': ''}}" href="{{$root}}/getting-started/" replace>Docs</a>
        <a class="nav-item hide-mobile {{section === 'blog' ? 'active': ''}}" href="{{$root}}/blog/" replace>Blog</a>
        <a class="nav-item hide-mobile" href="https://github.com/abelljs/abell">GitHub 	&#x2197;</a>
        <button 
          aria-label="Open Navigation Bar"
          aria-pressed="false"
          class="nav-item hide-pc sidebar-button"
          onclick="toggleSideBar()"
          style="padding: 25px; background: transparent; border: none;font-size: 13pt;"
        >&#9776;</button>
        <DarkModeToggle props={classes: 'hide-mobile', $root} />
      </div>
    </nav>
  </header>

  <!-- Side Navigation Menu -->
  <nav class="side-nav {{section}} side-nav-styles">
    <div class="side-nav-items-container">
      <ul>
        {{ 
          contentArray
            .filter(meta => navMenuOrder.includes(meta.$path))
            .sort((a, b) => navMenuOrder.indexOf(a.$path) - navMenuOrder.indexOf(b.$path))
            .map(meta => /* html */ `
              <li>
                <a 
                  class="nav-item ${$path.includes(meta.$path) ? 'active': ''}" 
                  href="${$root}/${meta.$path}/"
                >
                  ${meta.title} ${ meta.sublinks && !isSublink(meta) ? '<span class="collapse-icon">&#43;</span>' : '' }
                </a>
              </li>
              ${isSublink(meta) ? renderSubMenu(meta) : ''}
            `)
        }}
      </ul>
    </div>
    <div class="hide-pc mobile-top-nav-items">
      <a class="nav-item {{section === 'home' ? 'active' : ''}}" href="{{$root}}/">Home</a>
      <a class="nav-item {{section === 'docs' ? 'active': ''}}" href="{{$root}}/getting-started/">Docs</a>
      <a class="nav-item {{section === 'blog' ? 'active' : ''}}" href="{{$root}}/blog/">Blog</a>
      <a class="nav-item" href="https://github.com/abelljs/abell">GitHub 	&#x2197;</a>
      <div class="mobile-top-nav-dark-mode-container" style="text-align: right;">
        <DarkModeToggle/>
      </div>
    </div>
  </nav>
  <div onclick="toggleSideBar();" class="overlay"></div>
</template>
<script>
const toggleSideBar = () => {
  const sidebarButton = document.querySelector('.sidebar-button');
  const sideNav = document.querySelector('.side-nav');
  if (sideNav.classList.contains('show')) {
    sideNav.classList.remove('show');
    sidebarButton.setAttribute('aria-label', 'Open Navigation Bar');
    sidebarButton.setAttribute('aria-pressed', 'false')
    sidebarButton.innerHTML = '&#9776;'
  } else {
    sideNav.classList.add('show');
    sidebarButton.setAttribute('aria-label', 'Close Navigation Bar');
    sidebarButton.setAttribute('aria-pressed', 'true');
    sidebarButton.innerHTML = '&times;'
  }
}
</script>

<style>
.side-nav-styles {
  display: inline-block;
  width: 350px;
  height: 100%;
  overflow-y: auto;
}
nav.side-nav {
  position: fixed;
  right: 0px; top: 0px;
  padding-top: 110px;
  z-index: 9999;
  background-color: var(--side-nav-background);
}

nav.side-nav.home {
  display: none;
}

nav.side-nav .side-nav-items-container > ul {
  padding-left: 0px;
}

nav.side-nav ul {
  list-style: none;
}

nav.side-nav ul li {
  padding: 0px;
  margin: 0px;
}

nav.side-nav .collapse-icon {
  color: var(--abell-primary);
  font-weight: bold;
  display: inline-block;
  padding: 0px 10px;
}

nav.side-nav .nav-item {
  display: block;
  padding: 10px 30px;
  color: var(--font-color);
  font-size: 13pt;
}

ul.submenu a {
  color: var(--font-color);
  display: block;
  padding: 3px;
}

ul.submenu {
  padding-left: 40px;
  padding-bottom: 10px;
}

ul.submenu ul.submenu {
  padding-left: 20px !important;
}

ul.submenu a:before {
  content: '- ';
}

ul.submenu a:hover:before, ul.submenu a.done:before {
  content: '- ';
  font-weight: bold;
  color: var(--abell-primary);
  text-shadow: 
    0 0 20px var(--abell-primary), 
    0 0 10px var(--abell-primary),
    0 0 30px var(--abell-primary), 
    0 0 0px var(--abell-primary);
}

nav.side-nav .nav-item.active {
  font-weight: bold;
}

nav.side-nav ul.submenu a.active:before {
  content: '> ';
  font-weight: bold;
  color: var(--abell-primary);
  text-shadow: 
    0 0 20px var(--abell-primary), 
    0 0 10px var(--abell-primary), 
    0 0 30px var(--abell-primary), 
    0 0 0px var(--abell-primary);
}

nav.top-nav {
  position: fixed;
  top: 0px;
  left: 0px;
  width: 100%;
  font-size: 13pt;
  background-color: var(--top-nav-background);
  z-index: 10000;
  padding: 0px 60px;
}
nav.top-nav .nav-item {
  padding: 25px 20px;
  display: inline-block;
  color: var(--font-color);
  border-bottom: 2px solid var(--top-nav-background);
}
nav.top-nav .nav-item:hover {
  border-bottom: 2px solid var(--link-color);
  transition: border-bottom .2s ease;
}
nav.top-nav .active {
  border-bottom: 2px solid var(--link-color);
}
.mobile-top-nav-items {
  border-top: 1px solid #9993;
  position: absolute;
  padding-top: 10px;
  bottom: 0px;
  width: 100%;
}

.overlay {
  position: fixed;
  height: 100%;
  width: 100%;
  background-color: #000a;
  z-index: 3;
  display: none;
}

nav.side-nav.show + .overlay {
  display: block;
}

@media (max-width: 768px) {
  nav.side-nav.home {
    display: block;
  }

  nav.side-nav {
    right: -100%;
    transition: right .1s ease;
    box-shadow: 0 5px 20px -4px #0009;
  }

  .side-nav-styles {
    width: 250px;
  }

  nav.side-nav .nav-item {
    font-size: 0.9rem;
    padding: 10px 16px;
  }

  nav.side-nav .collapse-icon {
    padding: 0px 5px;
  }

  nav.side-nav.show {
    right: 0px;
    transition: right .2s ease;
  }

  nav.top-nav {
    padding: 0px;
  }

  .side-nav-items-container {
    overflow-y: scroll;
    height: calc(100% - 232px);
  }

  nav.home.side-nav .mobile-top-nav-items {
    border-top: none;
    height: calc(100% - 140px);
  }

  ul.submenu {
    padding-left: 20px;
  }

  ul.submenu li {
    font-size: 0.9rem;
  }

  nav.home.side-nav .side-nav-items-container {
    display: none;
  }

  nav.home.side-nav .mobile-top-nav-dark-mode-container {
    position: absolute;
    bottom: 0px;
    width: 100%;
  }
}
</style>
</AbellComponent>
